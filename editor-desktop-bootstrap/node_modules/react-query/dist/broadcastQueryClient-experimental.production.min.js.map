{"version":3,"file":"broadcastQueryClient-experimental.production.min.js","sources":["../node_modules/broadcast-channel/dist/es/util.js","../node_modules/broadcast-channel/dist/es/methods/native.js","../node_modules/broadcast-channel/dist/es/oblivious-set.js","../node_modules/broadcast-channel/dist/es/options.js","../node_modules/broadcast-channel/dist/es/methods/indexed-db.js","../node_modules/broadcast-channel/dist/es/methods/localstorage.js","../node_modules/broadcast-channel/dist/es/methods/simulate.js","../node_modules/broadcast-channel/dist/es/method-chooser.js","../node_modules/broadcast-channel/dist/es/broadcast-channel.js","../src/broadcastQueryClient-experimental/index.ts"],"sourcesContent":["/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function sleep(time) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(res, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nexport function microSeconds() {\n  var ms = new Date().getTime();\n\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n/**\n * copied from the 'detect-node' npm module\n * We cannot use the module directly because it causes problems with rollup\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\n\nexport var isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';","import { microSeconds as micro, isNode } from '../util';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.bc.postMessage(messageJson, false);\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (isNode && typeof window === 'undefined') return false;\n\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n\n    return true;\n  } else return false;\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n * @constructor\n */\nvar ObliviousSet = function ObliviousSet(ttl) {\n  var set = new Set();\n  var timeMap = new Map();\n  this.has = set.has.bind(set);\n\n  this.add = function (value) {\n    timeMap.set(value, now());\n    set.add(value);\n\n    _removeTooOldValues();\n  };\n\n  this.clear = function () {\n    set.clear();\n    timeMap.clear();\n  };\n\n  function _removeTooOldValues() {\n    var olderThen = now() - ttl;\n    var iterator = set[Symbol.iterator]();\n\n    while (true) {\n      var value = iterator.next().value;\n      if (!value) return; // no more elements\n\n      var time = timeMap.get(value);\n\n      if (time < olderThen) {\n        timeMap[\"delete\"](value);\n        set[\"delete\"](value);\n      } else {\n        // we reached a value that is not old enough\n        return;\n      }\n    }\n  }\n};\n\nfunction now() {\n  return new Date().getTime();\n}\n\nexport default ObliviousSet;","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions)); // main\n\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true; // indexed-db\n\n  if (!options.idb) options.idb = {}; //  after this time the messages get deleted\n\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150; //  handles abrupt db onclose events.\n\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose; // localstorage\n\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60; // custom methods\n\n  if (originalOptions.methods) options.methods = originalOptions.methods; // node\n\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n */\nimport { sleep, randomInt, randomToken, microSeconds as micro, isNode } from '../util.js';\nexport var microSeconds = micro;\nimport ObliviousSet from '../oblivious-set';\nimport { fillOptionsWithDefaults } from '../options';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n\n  return false;\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb(); // create table\n\n  var dbName = DB_PREFIX + channelName;\n  var openRequest = IndexedDB.open(dbName, 1);\n\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n\n  var dbPromise = new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n  return dbPromise;\n}\n/**\n * writes the new message to the database\n * so other readers can find it\n */\n\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var transaction = db.transaction([OBJECT_STORE_ID], 'readwrite');\n  return new Promise(function (res, rej) {\n    transaction.oncomplete = function () {\n      return res();\n    };\n\n    transaction.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    var objectStore = transaction.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n  });\n}\nexport function getAllMessages(db) {\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        ret.push(cursor.value); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n        cursor[\"continue\"]();\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n\n  return new Promise(function (res) {\n    openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessageById(db, id) {\n  var request = db.transaction([OBJECT_STORE_ID], 'readwrite').objectStore(OBJECT_STORE_ID)[\"delete\"](id);\n  return new Promise(function (res) {\n    request.onsuccess = function () {\n      return res();\n    };\n  });\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        var msgObk = cursor.value;\n\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          res(ret);\n          return;\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(db, ttl) {\n  return getOldMessages(db, ttl).then(function (tooOld) {\n    return Promise.all(tooOld.map(function (msgObj) {\n      return removeMessageById(db, msgObj.id);\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parrallel\n      writeBlockPromise: Promise.resolve(),\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n\n\n    _readLoop(state);\n\n    return state;\n  });\n}\n\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\n\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n\n  return true;\n}\n/**\n * reads all new messages from the database and emits them\n */\n\n\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return Promise.resolve(); // if no one is listening, we do not need to scan for new messages\n\n  if (!state.messagesCallback) return Promise.resolve();\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined some times\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */\n    .filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return Promise.resolve();\n  });\n}\n\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState.db, channelState.options.idb.ttl);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  if (isNode) return false;\n  var idb = getIdb();\n  if (!idb) return false;\n  return true;\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nimport ObliviousSet from '../oblivious-set';\nimport { fillOptionsWithDefaults } from '../options';\nimport { sleep, randomToken, microSeconds as micro, isNode } from '../util';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\n\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = randomToken();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if (isNode) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return 5;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import NativeMethod from './methods/native.js';\nimport IndexeDbMethod from './methods/indexed-db.js';\nimport LocalstorageMethod from './methods/localstorage.js';\nimport SimulateMethod from './methods/simulate.js';\nimport { isNode } from './util'; // order is important\n\nvar METHODS = [NativeMethod, // fastest\nIndexeDbMethod, LocalstorageMethod];\n/**\n * The NodeMethod is loaded lazy\n * so it will not get bundled in browser-builds\n */\n\nif (isNode) {\n  /**\n   * we use the non-transpiled code for nodejs\n   * because it runs faster\n   */\n  var NodeMethod = require('../../src/methods/' + // use this hack so that browserify and others\n  // do not import the node-method by default\n  // when bundling.\n  'node.js');\n  /**\n   * this will be false for webpackbuilds\n   * which will shim the node-method with an empty object {}\n   */\n\n\n  if (typeof NodeMethod.canBeUsed === 'function') {\n    METHODS.push(NodeMethod);\n  }\n}\n\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean); // directly chosen\n\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n\n\n  if (!options.webWorkerSupport && !isNode) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) throw new Error('No useable methode found:' + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}","import { isPromise } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  this.name = name;\n\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options); // isListening\n\n  this._iL = false;\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n\n  this._onML = null;\n  /**\n   * _addEventListeners\n   */\n\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n\n  this._befC = [];\n  /**\n   * _preparePromise\n   */\n\n  this._prepP = null;\n\n  _prepareChannel(this);\n}; // STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\n\nBroadcastChannel._pubkey = true;\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\n\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return Promise.resolve(false);\n  }\n}\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\n\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n} // PROTOTYPE\n\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed');\n    }\n\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _removeListenerObject(this, 'message', this._onML);\n\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n\n    if (this.closed) return;\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : Promise.resolve();\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare.then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    }).then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n\n  get type() {\n    return this.method.type;\n  }\n\n};\n\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : Promise.resolve();\n  return awaitPrepare.then(function () {\n    return broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n  });\n}\n\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\n\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\n\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n\n  _startListening(channel);\n}\n\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n\n  _stopListening(channel);\n}\n\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (obj) {\n        if (msgObj.time >= obj.time) {\n          obj.fn(msgObj.data);\n        }\n      });\n    };\n\n    var time = channel.method.microSeconds();\n\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\n\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // noone is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","import { BroadcastChannel } from 'broadcast-channel'\nimport { QueryClient } from '../core'\n\ninterface BroadcastQueryClientOptions {\n  queryClient: QueryClient\n  broadcastChannel?: string\n}\n\nexport function broadcastQueryClient({\n  queryClient,\n  broadcastChannel = 'react-query',\n}: BroadcastQueryClientOptions) {\n  let transaction = false\n  const tx = (cb: () => void) => {\n    transaction = true\n    cb()\n    transaction = false\n  }\n\n  const channel = new BroadcastChannel(broadcastChannel, {\n    webWorkerSupport: false,\n  })\n\n  const queryCache = queryClient.getQueryCache()\n\n  queryClient.getQueryCache().subscribe(queryEvent => {\n    if (transaction || !queryEvent?.query) {\n      return\n    }\n\n    const {\n      query: { queryHash, queryKey, state },\n    } = queryEvent\n\n    if (\n      queryEvent.type === 'queryUpdated' &&\n      queryEvent.action?.type === 'success'\n    ) {\n      channel.postMessage({\n        type: 'queryUpdated',\n        queryHash,\n        queryKey,\n        state,\n      })\n    }\n\n    if (queryEvent.type === 'queryRemoved') {\n      channel.postMessage({\n        type: 'queryRemoved',\n        queryHash,\n        queryKey,\n      })\n    }\n  })\n\n  channel.onmessage = action => {\n    if (!action?.type) {\n      return\n    }\n\n    tx(() => {\n      const { type, queryHash, queryKey, state } = action\n\n      if (type === 'queryUpdated') {\n        const query = queryCache.get(queryHash)\n\n        if (query) {\n          query.setState(state)\n          return\n        }\n\n        queryCache.build(\n          queryClient,\n          {\n            queryKey,\n            queryHash,\n          },\n          state\n        )\n      } else if (type === 'queryRemoved') {\n        const query = queryCache.get(queryHash)\n\n        if (query) {\n          queryCache.remove(query)\n        }\n      }\n    })\n  }\n}\n"],"names":["sleep","time","Promise","res","setTimeout","randomToken","Math","random","toString","substring","lastMs","additional","microSeconds","ms","Date","getTime","isNode","Object","prototype","call","process","create","channelName","state","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msg","data","close","channelState","onMessage","fn","postMessage","messageJson","canBeUsed","window","_pubkey","Error","type","averageResponseTime","micro","ObliviousSet","ttl","set","Set","timeMap","Map","has","bind","add","value","now","olderThen","iterator","Symbol","next","get","_removeTooOldValues","clear","fillOptionsWithDefaults","originalOptions","arguments","length","undefined","options","JSON","parse","stringify","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","methods","node","useFastPath","getIdb","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","getMessagesHigherThan","db","lastCursorId","objectStore","transaction","ret","keyRangeValue","IDBKeyRange","bound","Infinity","openCursor","e","onsuccess","ev","cursor","target","result","id","push","cleanOldMessages","msgObk","getOldMessages","then","tooOld","all","map","msgObj","request","removeMessageById","readNewMessages","closed","resolve","newerMessages","filter","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","forEach","dbName","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","rej","onerror","createDatabase","writeBlockPromise","readQueuePromises","_readLoop","readerUuid","writeObject","oncomplete","writeMessage","min","max","floor","getLocalStorage","localStorage","storageKey","ls","key","setItem","removeItem","listener","newValue","addEventListener","addStorageEventListener","token","removeEventListener","writeObj","document","createEvent","initEvent","dispatchEvent","userAgent","navigator","toLowerCase","includes","defaultTime","SIMULATE_CHANNELS","name","Array","from","channel","METHODS","NativeMethod","IndexeDbMethod","LocalstorageMethod","NodeMethod","require","maybePromise","obj","method","chooseMethods","concat","Boolean","SimulateMethod","find","m","useMethod","chooseMethod","this","_iL","_onML","_addEL","message","internal","_befC","_prepP","s","_state","_post","broadcastChannel","_hasMessageListeners","_addListenerObject","listenerFn","_startListening","_removeListenerObject","o","_stopListening","postInternal","listenObj","_this","awaitPrepare","queryClient","queryCache","getQueryCache","subscribe","queryEvent","query","queryHash","queryKey","action","setState","build","remove","cb"],"mappings":"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"}