{"version":3,"file":"persistQueryClient-experimental.production.min.js","sources":["../src/core/logger.ts","../src/persistQueryClient-experimental/index.ts"],"sourcesContent":["// TYPES\n\nexport interface Logger {\n  log: LogFunction\n  warn: LogFunction\n  error: LogFunction\n}\n\ntype LogFunction = (...args: any[]) => void\n\n// FUNCTIONS\n\nlet logger: Logger = console\n\nexport function getLogger(): Logger {\n  return logger\n}\n\nexport function setLogger(newLogger: Logger) {\n  logger = newLogger\n}\n","import { QueryClient } from '../core'\nimport { getLogger } from '../core/logger'\nimport {\n  dehydrate,\n  DehydratedState,\n  DehydrateOptions,\n  HydrateOptions,\n  hydrate,\n} from 'react-query'\nimport { Promisable } from 'type-fest'\n\nexport interface Persistor {\n  persistClient(persistClient: PersistedClient): Promisable<void>\n  restoreClient(): Promisable<PersistedClient | undefined>\n  removeClient(): Promisable<void>\n}\n\nexport interface PersistedClient {\n  timestamp: number\n  buster: string\n  clientState: DehydratedState\n}\n\nexport interface PersistQueryClientOptions {\n  /** The QueryClient to persist */\n  queryClient: QueryClient\n  /** The Persistor interface for storing and restoring the cache\n   * to/from a persisted location */\n  persistor: Persistor\n  /** The max-allowed age of the cache.\n   * If a persisted cache is found that is older than this\n   * time, it will be discarded */\n  maxAge?: number\n  /** A unique string that can be used to forcefully\n   * invalidate existing caches if they do not share the same buster string */\n  buster?: string\n  /** The options passed to the hydrate function */\n  hydrateOptions?: HydrateOptions\n  /** The options passed to the dehydrate function */\n  dehydrateOptions?: DehydrateOptions\n}\n\nexport async function persistQueryClient({\n  queryClient,\n  persistor,\n  maxAge = 1000 * 60 * 60 * 24,\n  buster = '',\n  hydrateOptions,\n  dehydrateOptions,\n}: PersistQueryClientOptions) {\n  if (typeof window !== 'undefined') {\n    // Subscribe to changes\n    const saveClient = () => {\n      const persistClient: PersistedClient = {\n        buster,\n        timestamp: Date.now(),\n        clientState: dehydrate(queryClient, dehydrateOptions),\n      }\n\n      persistor.persistClient(persistClient)\n    }\n\n    // Attempt restore\n    try {\n      const persistedClient = await persistor.restoreClient()\n\n      if (persistedClient) {\n        if (persistedClient.timestamp) {\n          const expired = Date.now() - persistedClient.timestamp > maxAge\n          const busted = persistedClient.buster !== buster\n          if (expired || busted) {\n            persistor.removeClient()\n          } else {\n            hydrate(queryClient, persistedClient.clientState, hydrateOptions)\n          }\n        } else {\n          persistor.removeClient()\n        }\n      }\n    } catch (err) {\n      getLogger().error(err)\n      getLogger().warn(\n        'Encountered an error attempting to restore client cache from persisted location. As a precaution, the persisted cache will be discarded.'\n      )\n      persistor.removeClient()\n    }\n\n    // Subscribe to changes in the query cache to trigger the save\n    queryClient.getQueryCache().subscribe(saveClient)\n  }\n}\n"],"names":["logger","console","getLogger","f","persistQueryClient","queryClient","persistor","maxAge","buster","hydrateOptions","dehydrateOptions","body","result","then","window","saveClient","persistClient","timestamp","Date","now","clientState","dehydrate","value","recover","e","restoreClient","persistedClient","expired","busted","removeClient","hydrate","direct","Promise","resolve","err","error","warn","getQueryCache","subscribe","args","i","arguments","length","apply","this","reject"],"mappings":"0RAYA,IAAIA,EAAiBC,QAEd,SAASC,WACPF,ECilBF,kBA1hBgBG,EA5BDC,GA4BCD,kBA3BrBE,IAAAA,YACAC,IAAAA,cACAC,OAAAA,aAAS,YACTC,OAAAA,aAAS,KACTC,IAAAA,eACAC,IAAAA,wBA0fK,SAAwBC,OAC1BC,EAASD,OACTC,GAAUA,EAAOC,YACbD,EAAOC,wBA3fQ,oBAAXC,YAEHC,EAAa,eACXC,EAAiC,CACrCR,OAAAA,EACAS,UAAWC,KAAKC,MAChBC,YAAaC,YAAUhB,EAAaK,IAGtCJ,EAAUU,cAAcA,WA2CvB,SAAmBM,EAAOT,UACzBS,GAASA,EAAMT,KAAOS,EAAMT,KAAKA,GAAQA,EAAKS,IA2c/C,SAAgBX,EAAMY,WAEvBX,EAASD,IACZ,MAAMa,UACAD,EAAQC,UAEZZ,GAAUA,EAAOC,KACbD,EAAOC,UAAK,EAAQU,GAErBX,sBAveeU,EApBahB,EAAUmB,gBAoBhBZ,WApBlBa,MAEFA,KACEA,EAAgBT,eACZU,EAAUT,KAAKC,MAAQO,EAAgBT,UAAYV,EACnDqB,EAASF,EAAgBlB,SAAWA,EACtCmB,GAAWC,EACbtB,EAAUuB,eAEVC,UAAQzB,EAAaqB,EAAgBN,YAAaX,QAGpDH,EAAUuB,gBASfE,EACIlB,EAAOA,EAAKS,GAASA,GAExBA,GAAUA,EAAMT,OACpBS,EAAQU,QAAQC,QAAQX,IAElBT,EAAOS,EAAMT,KAAKA,GAAQS,GAP3B,IAAgBA,EAAOT,EAAMkB,cALvBG,GACPhC,IAAYiC,MAAMD,GAClBhC,IAAYkC,KACV,4IAEF9B,EAAUuB,8BAIZxB,EAAYgC,gBAAgBC,UAAUvB,WAjBlC,eACD,IAAIwB,EAAO,GAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAChDD,EAAKC,GAAKC,UAAUD,cAGbR,QAAQC,QAAQ9B,EAAEwC,MAAMC,KAAML,IACpC,MAAMf,UACAQ,QAAQa,OAAOrB"}